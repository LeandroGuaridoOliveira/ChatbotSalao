<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Novo Agendamento</title>
  <style>
    body {
      font-family: Arial;
      background: #ede7f6;
    }
    .central {
      margin: 60px auto;
      max-width: 460px;
      background: #fff;
      border-radius: 8px;
      box-shadow: 0 2px 8px #ccc;
      padding: 32px;
    }
    label {
      font-weight: bold;
      display: block;
      margin-bottom: 6px;
      margin-top: 14px;
      color: #555;
    }
    input, select {
      width: 100%;
      padding: 8px;
      margin-bottom: 12px;
      border-radius: 4px;
      border: 1px solid #ccc;
    }
    .msg-erro {
      background: #fbe9e7;
      color: #d84315;
      border: 1px solid #ffab91;
      padding: 10px;
      border-radius: 5px;
      margin-bottom: 16px;
      font-size: 14px;
    }
    .procedimentos {
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
      margin-top: 8px;
      margin-bottom: 20px;
    }
    .pill-button {
      border: 1px solid #7e57c2;
      padding: 8px 12px;
      border-radius: 20px;
      background: #fff;
      color: #7e57c2;
      font-size: 14px;
      cursor: pointer;
      transition: all 0.2s ease-in-out;
      user-select: none;
    }
    .pill-button.selected {
      background: #7e57c2;
      color: white;
    }
    button {
      background: #7e57c2;
      color: #fff;
      border: none;
      width: 100%;
      padding: 10px 0;
      font-weight: bold;
      border-radius: 4px;
      margin-top: 12px;
    }
    a {
      color: #7e57c2;
      display: inline-block;
      margin-top: 12px;
      text-align: center;
      width: 100%;
      font-size: 14px;
    }
  </style>
</head>
<body>
  <div class="central">
    <h3 style="color: #7e57c2;">Novo Agendamento</h3>

    <% if (msg) { %>
      <div class="msg-erro"><%= msg %></div>
    <% } %>

    <form id="form-agendamento" method="POST" action="/novo-agendamento">
      <label for="nome">Nome do cliente:</label>
      <input name="nome" id="nome" placeholder="Nome completo" required>

      <label for="cpf">CPF do cliente:</label>
      <input name="cpf" id="cpf" placeholder="Apenas números" required>

      <label for="funcionario_id">Funcionário:</label>
      <select name="funcionario_id" id="funcionario_id" required>
        <option value="">Selecione o funcionário</option>
        <% funcionarios.forEach(f => { %>
          <option value="<%= f.id %>"><%= f.nome %> - <%= f.especialidade %></option>
        <% }) %>
      </select>

      <label for="dia">Data:</label>
      <input type="date" name="dia" id="dia" required>

      <label for="horario">Horário:</label>
      <select name="horario" id="horario" required>
        <option value="">Escolha a data e o funcionário</option>
      </select>

      <label>Procedimentos:</label>
      <div class="procedimentos">
        <% procedimentos.forEach(p => { %>
          <div class="pill-button" data-id="<%= p.id %>">
            <input type="checkbox" name="procedimento_id" value="<%= p.id %>" style="display: none;">
            <span><%= p.nome %> (R$ <%= p.valor %>)</span>
          </div>
        <% }) %>
      </div>

      <button type="submit">Gravar</button>
    </form>

    <a href="/agendamentos">&larr; Voltar à lista</a>
  </div>


  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  document.querySelector('#form-agendamento').addEventListener('submit', function(e) {
    e.preventDefault(); // impede o envio imediato

    Swal.fire({
      title: 'Confirmar agendamento?',
      text: 'Deseja realmente salvar este agendamento?',
      icon: 'question',
      showCancelButton: true,
      confirmButtonText: 'Sim, salvar',
      cancelButtonText: 'Cancelar',
      confirmButtonColor: '#7e57c2',
      cancelButtonColor: '#aaa'
    }).then((result) => {
      if (result.isConfirmed) {
        this.submit(); // envia o formulário
      }
    });
  });
</script>

<script>
  const funcionarioSelect = document.getElementById('funcionario_id');
  const dataInput = document.getElementById('dia');
  const selectHorario = document.getElementById('horario');

  async function atualizarHorarios() {
    const funcionarioId = funcionarioSelect.value;
    const dia = dataInput.value;
    const procedimentos = Array.from(document.querySelectorAll('input[name="procedimento_id"]:checked'))
                               .map(input => input.value);

    if (!funcionarioId || !dia || procedimentos.length === 0) {
      selectHorario.innerHTML = '<option value="">Escolha funcionário, data e procedimentos</option>';
      return;
    }

    const queryParams = new URLSearchParams();
    queryParams.append('funcionario_id', funcionarioId);
    queryParams.append('dia', dia);
    procedimentos.forEach(p => queryParams.append('procedimentos', p));

    const response = await fetch(`/horarios-disponiveis?${queryParams.toString()}`);
    const horarios = await response.json();

    selectHorario.innerHTML = '';

    if (horarios.length === 0) {
      selectHorario.innerHTML = '<option value="">Sem horários disponíveis</option>';
    } else {
      horarios.forEach(h => {
        const opt = document.createElement('option');
        opt.value = h;
        opt.textContent = h;
        selectHorario.appendChild(opt);
      });
    }
  }

  // Escutar mudanças
  funcionarioSelect.addEventListener('change', atualizarHorarios);
  dataInput.addEventListener('change', atualizarHorarios);

  // Procedimentos: comportamento + atualizar horário
  document.querySelectorAll('.pill-button').forEach(pill => {
    pill.addEventListener('click', function () {
      const input = pill.querySelector('input');
      input.checked = !input.checked;
      pill.classList.toggle('selected', input.checked);
      atualizarHorarios(); // 🔁 atualiza os horários quando procedimento muda
    });
  });
</script>

</body>
</html>
