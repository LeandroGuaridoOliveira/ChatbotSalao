<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <title>Agendamentos</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 40px;
      background-color: #f9f9f9;
    }
  
    h1 {
      color: #7e57c2;
    }
  
    /* Estilo do formulário de filtros */
    .form-filtro {
      margin-bottom: 24px;
      background: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 6px #ccc;
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      gap: 10px;
    }
  
    .form-filtro label {
      font-weight: bold;
      margin-right: 6px;
    }
  
    .form-filtro select,
    .form-filtro input {
      padding: 6px 10px;
      border-radius: 4px;
      border: 1px solid #ccc;
      min-width: 150px;
    }
  
    .form-filtro button {
      background-color: #7e57c2;
      color: white;
      padding: 8px 16px;
      border: none;
      border-radius: 4px;
      font-weight: bold;
      cursor: pointer;
    }
  
    .form-filtro a {
      text-decoration: none;
      color: #7e57c2;
      font-size: 14px;
      margin-left: 10px;
    }
  
    /* Estilo da tabela */
    table {
      border-collapse: collapse;
      width: 100%;
      background: #fff;
      box-shadow: 0 2px 5px #ccc;
    }
  
    th, td {
      border: 1px solid #ddd;
      padding: 12px 10px;
      text-align: left;
    }
  
    tr:nth-child(even) { background-color: #f6f6f6; }
    tr:hover { background-color: #f0ebfa; }
  
    th {
      background-color: #ede7f6;
      color: #5e35b1;
    }
  
    /* Links de navegação */
    .links {
      margin-top: 30px;
      font-size: 15px;
    }
  
    .links a {
      color: #7e57c2;
      text-decoration: none;
      margin-right: 16px;
    }
  
    .links a:hover {
      text-decoration: underline;
    }
  
    /* Navegação acima da tabela */
    .navegacao {
      margin-bottom: 10px;
      text-align: center;
    }
  
    .navegacao a {
      margin: 0 10px;
      text-decoration: none;
      color: #6f42c1;
      font-weight: bold;
      transition: color 0.3s;
    }
  
    .navegacao a:hover {
      color: #5a34a1;
    }
  
    /* Estilos de grupo de botões */
    .grupo-botoes {
      display: flex;
      justify-content: space-between;
      align-items: center;
      gap: 8px;
      flex-wrap: nowrap;
      width: 100%;
    }
  
    .grupo-botoes form {
      flex: 1;
      margin: 0;
    }
  
    /* Botões padrão */
    .botao-largo {
      width: 100%;
      padding: 10px 0;
      font-size: 13px;
      border-radius: 4px;
      border: none;
      white-space: nowrap;
      cursor: pointer;
    }
  
    /* Botão roxo - Editar */
    .botao-roxo {
      background-color: #7e57c2;
      color: white;
    }
    .botao-roxo:hover {
      background-color: #5e35b1;
    }
  
    /* Botão vermelho - Excluir */
    .botao-vermelho {
      background-color: #e53935;
      color: white;
    }
    .botao-vermelho:hover {
      background-color: #c62828;
    }
  
    /* Botão verde - Finalizar */
    .botao-verde {
      background-color: #4CAF50;
      color: white;
    }
    .botao-verde:hover {
      background-color: #388e3c;
    }
  </style>
  
</head>
<body>

  <div style="text-align: right; margin-bottom: 10px; font-size: 16px; color: #7e57c2;">
    Olá, <%= nome_usuario %>!
  </div>

  <div style="margin-bottom: 20px;">
    <% if (tipo === 'admin') { %>
      <a href="/novo-agendamento">Novo Agendamento</a> |
      <a href="/funcionarios">Funcionários</a> |
      <a href="/procedimentos">Procedimentos</a> |
      <a href="/especialidades">Especialidades</a> |
      <a href="/relatorios">Relatórios</a> |
      <a href="/logout">Sair</a>
    <% } else { %>
      <a href="/novo-agendamento">Novo Agendamento</a> |
      <a href="/logout">Sair</a>
    <% } %>
  </div>
  

  <h1>Agendamentos</h1>

  <% if (msg) { %>
    <div id="alert-box" class="bg-green-100 border border-green-300 text-green-800 px-4 py-3 rounded-xl mb-4 shadow flex items-start justify-between">
      <div class="flex items-center gap-2">
        <span class="text-green-600 text-xl font-bold">✔️</span>
        <p class="font-medium"><%= msg %></p>
      </div>
      <button onclick="document.getElementById('alert-box').remove()" class="text-green-700 hover:text-red-500 font-bold text-lg ml-4">
        ❌
      </button>
    </div>
  <% } %>

  <form method="get" action="/agendamentos" class="form-filtro">
    <label for="filtro">Filtrar por:</label>
    <select name="filtro" id="filtro" onchange="mostrarCampoFiltro(this.value)">
      <option value="">Escolha...</option>
      <option value="nome" <%= filtro==='nome' ? 'selected' : '' %>>Nome</option>
      <option value="cpf" <%= filtro==='cpf' ? 'selected' : '' %>>CPF</option>
      <option value="procedimento" <%= filtro==='procedimento' ? 'selected' : '' %>>Procedimento</option>
      <option value="dia" <%= filtro==='dia' ? 'selected' : '' %>>Dia</option>
      <option value="funcionario" <%= filtro==='funcionario' ? 'selected' : '' %>>Funcionário</option>
    </select>

    <select name="valorFuncionario" id="campoFuncionario" style="display:none;">
      <option value="">Todos os funcionários</option>
      <% funcionarios.forEach(f => { %>
        <option value="<%= f.id %>" <%= valorFuncionario == f.id ? "selected" : "" %>>
          <%= f.nome %> - <%= f.especialidade %>
        </option>
      <% }) %>
    </select>

    <input type="text" name="valorTexto" id="campoTexto"
      style="display:none;"
      value="<%= (filtro==='nome' || filtro==='cpf') ? valor : '' %>"
      placeholder="Digite para buscar" autocomplete="off" />

    <select name="valorProcedimento" id="campoProcedimento" style="display:none;">
      <% listaProcedimentos.forEach(p => { %>
        <option value="<%= p.id %>" <%= valor == p.id ? 'selected' : '' %>><%= p.nome %></option>
      <% }) %>
    </select>

    <input type="date" name="valorData" id="campoData"
      style="display:none;"
      value="<%= filtro==='dia' ? valor : '' %>" />

    <button type="submit">Filtrar</button>

    <% if (filtro) { %>
      <a href="/agendamentos">(Limpar filtro)</a>
    <% } %>
  </form>

  <table>
    <tr>
      <th>Nome</th>
      <th>CPF</th>
      <th>Dia</th>
      <th>Horário</th>
      <th>Procedimentos</th>
      <th>Funcionário</th>
      <th>Valor Total</th>      
      <th>Ações</th>
    </tr>
    <tbody>
      <% if (ags.length === 0) { %>
        <tr>
          <td colspan="8" style="text-align:center;">Nenhum agendamento encontrado.</td>
        </tr>
      <% } else { %>
        <% ags.forEach(a => { %>
          <tr id="linha-agendamento-<%= a.agendamento_id %>">
            <td><%= a.cliente_nome %></td>
            <td><%= a.cliente_cpf %></td>
            <td><%= a.dia %></td>
            <td><%= a.horario %></td>
            <td><%= a.nomes_procedimentos %></td>
            <td><%= a.funcionario_nome || "Não atribuído" %></td>
            <td>R$ <%= (a.valor_total || 0).toFixed(2) %></td>
            <td style="padding: 6px 8px;">
              <div class="grupo-botoes largura-total">
                <form onsubmit="finalizarAgendamento(<%= a.agendamento_id %>); return false;">
                  <button type="submit" class="botao-verde botao-largo">Finalizar</button>
                </form>
            
                <form method="get" action="/editar-agendamento/<%= a.agendamento_id %>">
                  <button type="submit" class="botao-roxo botao-largo">Editar</button>
                </form>
            
                <form method="post" action="/apagar-agendamento/<%= a.agendamento_id %>" class="form-excluir-agendamento">
                  <button type="submit" class="botao-vermelho botao-largo">Excluir</button>
                </form>
            
              </div>
            </td>
            
          </tr>
        <% }) %>
      <% } %>
    </tbody>    
  </table>
  

  <script>
    function mostrarCampoFiltro(tipo) {
      document.getElementById('campoTexto').style.display = (tipo === 'nome' || tipo === 'cpf') ? 'inline-block' : 'none';
      document.getElementById('campoProcedimento').style.display = (tipo === 'procedimento') ? 'inline-block' : 'none';
      document.getElementById('campoData').style.display = (tipo === 'dia') ? 'inline-block' : 'none';
      document.getElementById('campoFuncionario').style.display = (tipo === 'funcionario') ? 'inline-block' : 'none';
    }

    window.onload = function() {
      mostrarCampoFiltro(document.getElementById('filtro').value);
    };
  </script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    document.querySelectorAll('.form-excluir-agendamento').forEach(form => {
      form.addEventListener('submit', function(e) {
        e.preventDefault();
        Swal.fire({
          title: 'Excluir agendamento?',
          text: 'Essa ação não pode ser desfeita.',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonText: 'Sim, excluir',
          cancelButtonText: 'Cancelar',
          confirmButtonColor: '#d84315',
          cancelButtonColor: '#aaa'
        }).then((result) => {
          if (result.isConfirmed) {
            this.submit();
          }
        });
      });
    });
  </script>

<script>
  async function finalizarAgendamento(id) {
    const confirmar = await Swal.fire({
      title: 'Finalizar Agendamento?',
      text: "Tem certeza que deseja marcar como finalizado?",
      icon: 'question',
      showCancelButton: true,
      confirmButtonColor: '#4CAF50',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Sim, finalizar',
      cancelButtonText: 'Cancelar'
    });

    if (confirmar.isConfirmed) {
      try {
        const response = await fetch(`/agendamentos/finalizar/${id}`, { method: 'POST' });
        const result = await response.json();
        if (result.success) {
          Swal.fire('Finalizado!', 'O agendamento foi finalizado.', 'success');
          const linha = document.getElementById(`linha-agendamento-${id}`);
          if (linha) linha.remove();
        } else {
          Swal.fire('Erro', 'Não foi possível finalizar o agendamento.', 'error');
        }
      } catch (error) {
        Swal.fire('Erro', 'Erro de comunicação com o servidor.', 'error');
      }
    }
  }
  app.get('/logout', (req, res) => {
  req.session.destroy(err => {
    if (err) {
      console.error('Erro ao destruir a sessão:', err);
      return res.send('Erro ao fazer logout.');
    }
    res.redirect('/login');
  });
});

</script>

</body>
</html>
