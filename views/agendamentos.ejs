<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <title>Agendamentos</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 40px;
      background-color: #f9f9f9;
    }
  
    h1 {
      color: #7e57c2;
    }
  
    /* Estilo do formul√°rio de filtros */
    .form-filtro {
      margin-bottom: 24px;
      background: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 6px #ccc;
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      gap: 10px;
    }
  
    .form-filtro label {
      font-weight: bold;
      margin-right: 6px;
    }
  
    .form-filtro select,
    .form-filtro input {
      padding: 6px 10px;
      border-radius: 4px;
      border: 1px solid #ccc;
      min-width: 150px;
    }
  
    .form-filtro button {
      background-color: #7e57c2;
      color: white;
      padding: 8px 16px;
      border: none;
      border-radius: 4px;
      font-weight: bold;
      cursor: pointer;
    }
  
    .form-filtro a {
      text-decoration: none;
      color: #7e57c2;
      font-size: 14px;
      margin-left: 10px;
    }
  
    /* Estilo da tabela */
    table {
      border-collapse: collapse;
      width: 100%;
      background: #fff;
      box-shadow: 0 2px 5px #ccc;
    }
  
    th, td {
      border: 1px solid #ddd;
      padding: 12px 10px;
      text-align: left;
    }
  
    tr:nth-child(even) { background-color: #f6f6f6; }
    tr:hover { background-color: #f0ebfa; }
  
    th {
      background-color: #ede7f6;
      color: #5e35b1;
    }
  
    /* Links de navega√ß√£o padr√£o (rodap√© ou lateral) */
    .links {
      margin-top: 30px;
      font-size: 15px;
    }
  
    .links a {
      color: #7e57c2;
      text-decoration: none;
      margin-right: 16px;
    }
  
    .links a:hover {
      text-decoration: underline;
    }
  
    /* Navega√ß√£o acima da tabela (centralizado, roxo e bold) */
    .links-centralizados {
      text-align: center;
      margin-bottom: 20px;
    }
  
    .link-padrao {
      display: inline-block;
      margin: 0 10px;
      color: #7e57c2;
      font-weight: bold;
      text-decoration: none;
      font-size: 16px;
      transition: color 0.3s;
    }
  
    .link-padrao:hover {
      color: #5a34a1;
      text-decoration: underline;
    }
  
    /* Estilos de grupo de bot√µes */
    .grupo-botoes {
      display: flex;
      justify-content: space-between;
      align-items: center;
      gap: 8px;
      flex-wrap: nowrap;
      width: 100%;
    }
  
    .grupo-botoes form {
      flex: 1;
      margin: 0;
    }
  
    /* Bot√µes padr√£o */
    .botao-largo {
      width: 100%;
      padding: 10px 0;
      font-size: 13px;
      border-radius: 4px;
      border: none;
      white-space: nowrap;
      cursor: pointer;
    }
  
    /* Bot√£o roxo - Editar */
    .botao-roxo {
      background-color: #7e57c2;
      color: white;
    }
    .botao-roxo:hover {
      background-color: #5e35b1;
    }
  
    /* Bot√£o vermelho - Excluir */
    .botao-vermelho {
      background-color: #e53935;
      color: white;
    }
    .botao-vermelho:hover {
      background-color: #c62828;
    }
  
    /* Bot√£o verde - Finalizar */
    .botao-verde {
      background-color: #4CAF50;
      color: white;
    }
    .botao-verde:hover {
      background-color: #388e3c;
    }

    .filtro-titulo {
  text-align: left;
  margin-bottom: 20px;
  font-size: 20px;
  font-weight: bold;
  color: #5e35b1;
}

.dropdown {
  display: inline-block;
  position: relative;
  margin-left: 8px;
}

.dropbtn {
  background-color: transparent;
  color: #7e57c2;
  font-weight: bold;
  border: none;
  cursor: pointer;
  font-size: 20px;
  text-decoration: underline;
}

.dropdown-content {
  display: none;
  position: absolute;
  background-color: #fff;
  min-width: 180px;
  box-shadow: 0px 4px 6px rgba(0,0,0,0.2);
  z-index: 10;
  border-radius: 6px;
  padding: 4px 0;
}

.dropdown-content a {
  color: #5e35b1;
  padding: 10px 16px;
  text-decoration: none;
  display: block;
  font-weight: normal;
  font-size: 14px;
}

.dropdown-content a:hover {
  background-color: #f0ebfa;
  font-weight: bold;
}

.dropdown:hover .dropdown-content {
  display: block;
}

  </style>
  
</head>
<body>

  <div style="text-align: right; margin-bottom: 10px; font-size: 16px; color: #7e57c2;">
    Ol√°, <%= nome_usuario %>!
  </div>

  <div class="links-centralizados">
    <% if (tipo === 'admin') { %>
      <a href="/novo-agendamento" class="link-padrao">Novo Agendamento</a> |
      <a href="/funcionarios "class="link-padrao" >Funcion√°rios</a> |
      <a href="/procedimentos"class="link-padrao">Procedimentos</a> |
      <a href="/especialidades"class="link-padrao">Especialidades</a> |
      <a href="/relatorios"class="link-padrao">Relat√≥rios</a> |
      <a href="/logout"class="link-padrao">Sair</a>
    <% } else { %>
      <a href="/novo-agendamento"class="link-padrao">Novo Agendamento</a> |
      <a href="/logout"class="link-padrao">Sair</a>
    <% } %>
  </div>
  


<!-- Filtro simples por cliente -->
<div class="filtro-titulo" style="margin-bottom: 12px;">
  <span style="font-size: 20px; font-weight: bold; color: #5e35b1;">üîç Filtrar por:</span>
  <select id="tipoFiltro" onchange="mostrarFiltroSelecionado()" style="margin-left: 12px; padding: 4px 10px;">
    <option value="">Selecione</option>
    <option value="cliente">Cliente</option>
    <option value="funcionario">Funcion√°rio</option>
    <option value="dia">Dia</option>
    <option value="semana">Semana</option>
  </select>
</div>

<div id="areaFiltroSelecionado" style="margin-top: 10px;"></div>

<script>
  const funcionarios = <%- JSON.stringify(funcionarios || []) %>;

  function mostrarFiltroSelecionado() {
    const tipo = document.getElementById('tipoFiltro').value;
    const area = document.getElementById('areaFiltroSelecionado');
    area.innerHTML = '';

    if (tipo === 'cliente') {
      area.innerHTML = `
        <form method="GET" action="/agendamentos">
          <table class="filtro-tabela">
            <tr>
              <td><label for="cliente">Cliente:</label></td>
              <td><input type="text" name="cliente" id="cliente" placeholder="Nome ou CPF"></td>
              <td><button type="submit">Filtrar</button></td>
            </tr>
          </table>
        </form>
      `;
    } else if (tipo === 'funcionario') {
      let opcoes = '<option value="">Todos</option>';
      funcionarios.forEach(f => {
        opcoes += `<option value="${f.id}">${f.nome}</option>`;
      });
      area.innerHTML = `
        <form method="GET" action="/agendamentos">
          <table class="filtro-tabela">
            <tr>
              <td><label for="funcionario">Funcion√°rio:</label></td>
              <td>
                <select name="funcionario" id="funcionario">
                  ${opcoes}
                </select>
              </td>
              <td><button type="submit">Filtrar</button></td>
            </tr>
          </table>
        </form>
      `;
    } else if (tipo === 'dia') {
      area.innerHTML = `
        <form method="GET" action="/agendamentos">
          <table class="filtro-tabela">
            <tr>
              <td><label for="dataDia">Dia:</label></td>
              <td><input type="date" name="dataDia" id="dataDia"></td>
              <td><button type="submit">Filtrar</button></td>
            </tr>
          </table>
        </form>
      `;
    } else if (tipo === 'semana') {
      area.innerHTML = `
        <form method="GET" action="/agendamentos">
          <table class="filtro-tabela">
            <tr>
              <td><label for="dataSemana">Semana:</label></td>
              <td><input type="week" name="dataSemana" id="dataSemana"></td>
              <td><button type="submit">Filtrar</button></td>
            </tr>
          </table>
        </form>
      `;
    }
  }
</script>

<style>
  .filtro-tabela {
    background: #fff;
    padding: 12px;
    border-radius: 8px;
    box-shadow: 0 2px 6px #ccc;
    margin-top: 10px;
  }
  .filtro-tabela td {
    padding: 4px 8px;
  }
</style>


<script>
  function toggleFiltros() {
    const area = document.getElementById('areaFiltros');
    area.style.display = area.style.display === 'none' ? 'block' : 'none';
  }
</script>


<!-- T√≠tulo clic√°vel com dropdown para alternar os per√≠odos -->
<div class="filtro-titulo">
  <span>üìÖ Agendamentos de:</span>
  <div class="dropdown">
    <button class="dropbtn"><%= tipoDataTitulo %></button>
    <div class="dropdown-content">
      <a href="/agendamentos?tipoData=dia&dataDia=<%= hoje %>">Hoje</a>
      <a href="/agendamentos?tipoData=semana&dataSemana=<%= semanaAtual %>">Esta Semana</a>
      <a href="/agendamentos?tipoData=mes&dataMes=<%= mesAtual %>">Este M√™s</a>
      <a href="/agendamentos?tipoData=ano&dataAno=<%= anoAtual %>">Este Ano</a>
      <a href="/agendamentos">Todos</a>
    </div>
  </div>
</div>

  <table>
    <tr>
      <th>Nome</th>
      <th>CPF</th>
      <th>Dia</th>
      <th>Hor√°rio</th>
      <th>Procedimentos</th>
      <th>Funcion√°rio</th>
      <th>Valor Total</th>      
      <th>A√ß√µes</th>
    </tr>
    <tbody>
      <% if (ags.length === 0) { %>
        <tr>
          <td colspan="8" style="text-align:center;">Nenhum agendamento encontrado.</td>
        </tr>
      <% } else { %>
        <% ags.forEach(a => { %>
          <tr id="linha-agendamento-<%= a.agendamento_id %>">
            <td><%= a.cliente_nome %></td>
            <td><%= a.cliente_cpf %></td>
            <td>
              <% if (a.dia) {
                const partes = a.dia.split('-');
              %>
                <%= partes[2] %>/<%= partes[1] %>/<%= partes[0] %>
              <% } else { %>
                -
              <% } %>
            </td>
            <td><%= a.horario %></td>
            <td><%= a.nomes_procedimentos %></td>
            <td><%= a.funcionario_nome || "N√£o atribu√≠do" %></td>
            <td>R$ <%= (a.valor_total || 0).toFixed(2) %></td>
            <td style="padding: 6px 8px;">
              <div class="grupo-botoes largura-total">
                <form onsubmit="finalizarAgendamento(<%= a.agendamento_id %>); return false;">
                  <button type="submit" class="botao-verde botao-largo">Finalizar</button>
                </form>
            
                <form method="get" action="/editar-agendamento/<%= a.agendamento_id %>">
                  <button type="submit" class="botao-roxo botao-largo">Editar</button>
                </form>
            
                <form method="post" action="/apagar-agendamento/<%= a.agendamento_id %>" class="form-excluir-agendamento">
                  <button type="submit" class="botao-vermelho botao-largo">Excluir</button>
                </form>
              </div>
            </td>
          </tr>
        <% }) %>
      <% } %>
    </tbody>
    
  </table>
  

  <script>
    function mostrarCampoFiltro(tipo) {
      document.getElementById('campoTexto').style.display = (tipo === 'nome' || tipo === 'cpf') ? 'inline-block' : 'none';
      document.getElementById('campoProcedimento').style.display = (tipo === 'procedimento') ? 'inline-block' : 'none';
      document.getElementById('campoData').style.display = (tipo === 'dia') ? 'inline-block' : 'none';
      document.getElementById('campoFuncionario').style.display = (tipo === 'funcionario') ? 'inline-block' : 'none';
    }

    window.onload = function() {
      mostrarCampoFiltro(document.getElementById('filtro').value);
    };
  </script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    document.querySelectorAll('.form-excluir-agendamento').forEach(form => {
      form.addEventListener('submit', function(e) {
        e.preventDefault();
        Swal.fire({
          title: 'Excluir agendamento?',
          text: 'Essa a√ß√£o n√£o pode ser desfeita.',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonText: 'Sim, excluir',
          cancelButtonText: 'Cancelar',
          confirmButtonColor: '#d84315',
          cancelButtonColor: '#aaa'
        }).then((result) => {
          if (result.isConfirmed) {
            this.submit();
          }
        });
      });
    });
  </script>

<script>
  async function finalizarAgendamento(id) {
    const confirmar = await Swal.fire({
      title: 'Finalizar Agendamento?',
      text: "Tem certeza que deseja marcar como finalizado?",
      icon: 'question',
      showCancelButton: true,
      confirmButtonColor: '#4CAF50',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Sim, finalizar',
      cancelButtonText: 'Cancelar'
    });

    if (confirmar.isConfirmed) {
      try {
        const response = await fetch(`/agendamentos/finalizar/${id}`, { method: 'POST' });
        const result = await response.json();
        if (result.success) {
          Swal.fire('Finalizado!', 'O agendamento foi finalizado.', 'success');
          const linha = document.getElementById(`linha-agendamento-${id}`);
          if (linha) linha.remove();
        } else {
          Swal.fire('Erro', 'N√£o foi poss√≠vel finalizar o agendamento.', 'error');
        }
      } catch (error) {
        Swal.fire('Erro', 'Erro de comunica√ß√£o com o servidor.', 'error');
      }
    }
  }
  app.get('/logout', (req, res) => {
  req.session.destroy(err => {
    if (err) {
      console.error('Erro ao destruir a sess√£o:', err);
      return res.send('Erro ao fazer logout.');
    }
    res.redirect('/login');
  });
});

</script>

<script>
  // Estes valores s√£o passados do backend para o front
  const valoresData = {
    dia: "<%= dataDia || hoje %>",
    semana: "<%= dataSemana || semanaAtual %>",
    mes: "<%= dataMes || mesAtual %>",
    ano: "<%= dataAno || anoAtual %>"
  };

  function atualizarCampoData() {
    const tipo = document.getElementById('tipoData').value;
    const container = document.getElementById('campoData');
    container.innerHTML = ''; // limpa antes

    if (tipo === 'dia') {
      container.innerHTML = `
        <label for="dataDia">Escolha o dia:</label>
        <input type="date" name="dataDia" id="dataDia" required>
      `;
      document.getElementById('dataDia').value = valoresData.dia;
    } else if (tipo === 'semana') {
      container.innerHTML = `
        <label for="dataSemana">Escolha a semana:</label>
        <input type="week" name="dataSemana" id="dataSemana" required>
      `;
      document.getElementById('dataSemana').value = valoresData.semana;
    } else if (tipo === 'mes') {
      container.innerHTML = `
        <label for="dataMes">Escolha o m√™s:</label>
        <input type="month" name="dataMes" id="dataMes" required>
      `;
      document.getElementById('dataMes').value = valoresData.mes;
    } else if (tipo === 'ano') {
      const anoAtual = new Date().getFullYear();
      let selectHTML = '<label for="dataAno">Escolha o ano:</label><select name="dataAno" id="dataAno" required>';
      for (let i = anoAtual; i >= anoAtual - 10; i--) {
        const selected = i == valoresData.ano ? 'selected' : '';
        selectHTML += `<option value="${i}" ${selected}>${i}</option>`;
      }
      selectHTML += '</select>';
      container.innerHTML = selectHTML;
    }
  }

  // Executa ao carregar a p√°gina
  window.addEventListener('DOMContentLoaded', atualizarCampoData);
</script>


</body>
</html>
